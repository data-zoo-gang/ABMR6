% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/world.R
\name{world}
\alias{world}
\title{R6 class representing the world in which the moths live}
\description{
R6 class representing the world in which the moths live
}
\details{
Just like moths, the world has a colour either 0 (white) or 1 (black). During a
simulation, the colour of the world will change with a frequency defined by the
attribute `period`.
}
\examples{
my_world <- world$new(period = 50)


plot(NULL, ylim = c(0, 1), xlim = c(1, 1000), xlab = "time", ylab = "", axes = FALSE)
axis(1)

#Move the world forward 1000 time steps
#World will change colour every 50
for (t in 1:1000) {
  my_world$moveforward()
  abline(v = t, col = my_world$colour, lwd = 5)
}

## ------------------------------------------------
## Method `world$computecolour`
## ------------------------------------------------

#Create a world that should change colour every 50 timesteps
set.seed(123L)
my_world <- world$new(period = 50)

#Colour of world starts as black (i.e. 1)
my_world$colour

#Once time reaches 50, colour will change to white (i.e. 0)
my_world$time <- 50
my_world$computecolour()
my_world$colour

## ------------------------------------------------
## Method `world$moveforward`
## ------------------------------------------------

my_world <- world$new(period = 20)
#Starts with time 1
my_world$time

#Moves to time 2 after moveforward
my_world$moveforward()
my_world$time
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{time}}{Integer. Number of time steps that have passed in the world.}

\item{\code{colour}}{Integer. Colour of the world. Can be either 0 (white) or 1 (black).}

\item{\code{period}}{Integer. Number of time steps after which colour of world changes.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{world$new()}}
\item \href{#method-computecolour}{\code{world$computecolour()}}
\item \href{#method-moveforward}{\code{world$moveforward()}}
\item \href{#method-clone}{\code{world$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Initialize new R6 object of class 'world'.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{world$new(period = 100)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{period}}{Integer. Number of time steps after which colour of world changes.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An R6 object of class 'world'
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-computecolour"></a>}}
\if{latex}{\out{\hypertarget{method-computecolour}{}}}
\subsection{Method \code{computecolour()}}{
Change colour of the world.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{world$computecolour()}\if{html}{\out{</div>}}
}

\subsection{Details}{
World will change colour at a given frequency specified by the
attribute `period`.
}

\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{#Create a world that should change colour every 50 timesteps
set.seed(123L)
my_world <- world$new(period = 50)

#Colour of world starts as black (i.e. 1)
my_world$colour

#Once time reaches 50, colour will change to white (i.e. 0)
my_world$time <- 50
my_world$computecolour()
my_world$colour
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-moveforward"></a>}}
\if{latex}{\out{\hypertarget{method-moveforward}{}}}
\subsection{Method \code{moveforward()}}{
Advance time by 1.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{world$moveforward()}\if{html}{\out{</div>}}
}

\subsection{Details}{
Time of the world will move forward by 1, after which we check to see
if the colour of the world should change given the attribute `period`.
}

\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{my_world <- world$new(period = 20)
#Starts with time 1
my_world$time

#Moves to time 2 after moveforward
my_world$moveforward()
my_world$time
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{world$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
